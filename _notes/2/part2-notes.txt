when something is wrong, do not guess... use console.log() always

every looped element within a component needs a "key" attribute, example:

      <ul>
        {notes.map(note => <li key={note.id}>{note.content}</li>)}
      </ul>

the "key" attribute and it's value only exists within react and not rendered on the html page


Array.map() = always creates a new array to avoid mutation


Anti-Pattern = index as key in a looped element

  notes.map((note, index)=>... key={index})
  because "index" is not related to the data that the elements consume


always use Array.concat() for inserting arrays so it does not mutate state

>>npm i -g json-server
>>json-server --port 3001 --watch db.json


nodejs is single threaded asynchronous non blocking io javascript runtime
meaning, it will not wait for IO execution to finish (it just executes)
parallelized code can be run using web workers


>>pnpm i axios
>>pnpm i json-server -D
  "scripts": {
    "server": "json-server -p3001 --watch db.json"
  },
>>pnpm run server
>>pnpm start


runtime dependency = execution of program requires existence of the library
development dependency = program does not need it to proceed in execution


axios.get() returns a promise

Promise = object representing an eventual completion or failure of an asynchronous operation
        = 3 states
        a. pending = final value is not available yet
        b. fulfilled = operation completed, final value available, success operation.. also called 'resolved'
        c. rejected = error prevented the final value from being determined
